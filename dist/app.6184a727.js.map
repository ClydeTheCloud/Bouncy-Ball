{"version":3,"sources":["app.js"],"names":["ball","document","querySelector","action","layers","querySelectorAll","tapZone","wrapper","gameView","playerNameLabel","gameOverLabel","getElementById","startLabel","warningLabel","scoreLabel","highScoreLabel","changeNameBtn","leaderboardBtn","settingsElement","quialityBtn","nameModal","leaderboardModal","leaderboardContent","leaderboardPopup","nameBtn","warningText","closeLeaderboardBtn","playerName","isInAir","gravity","isGameOver","isGameReady","position","highScore","score","speedCoefficient","clickOrTouch","qualitySettings","localStorage","getItem","textContent","allTimeouts","allIntervals","backgroundTimeouts","leaderboardAPI","control","e","key","preventDefault","restart","jump","innerHTML","style","display","newBall","createElement","i","quarter","classList","add","appendChild","generateObstacles","speedUp","lastPosition","jumpUpLoopId","setInterval","positionDifference","Math","abs","clearInterval","filter","id","fallDownLoopId","bottom","push","randomTime","random","speedUpTimeoutId","setTimeout","Number","toFixed","obstaclePosition","obstacle","left","hitCheckLoopId","gameOver","passCheckLoopId","removeChild","genTimeoutId","forEach","clearTimeout","firstChild","lastChild","newLeaderboard","postHighScore","showLeaderboard","leaderboard","personal","response","fetch","method","headers","body","JSON","stringify","name","then","res","json","catch","err","showError","fetchLeaderboard","data","openLeaderboardModal","stopPropagation","player","leaderboardTable","generateTable","tableBody","playerOutOfLeaderboard","playerPosition","innerText","playerScore","closeLeaderboardModal","table","thead","tr","thPosition","thName","thScore","tbody","record","index","tdPosition","tdName","tdScore","getPersonalHighScore","generateBackground","layer","array","generateBackgroundLayer","length","arrayLength","indexFixed","timeToPassLayer","backgroundElementPosition","randomShadeOfGray","round","backgroundElement","height","width","backgroundColor","zIndex","padding","numberOfRows","parseInt","row","columns","window","animationDuration","backgroundTimoutId","setPlayerName","newName","value","trim","isValidName","RegExp","test","isNameLengthOk","removeAttribute","changeNameModal","message","errorPopup","gameWrapper","changeQuality","b","replace","remove","w","setItem","scaleGame","screen","windowWidth","scaleAmount","transform","documentElement","addEventListener","onresize"],"mappings":"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","file":"app.6184a727.js","sourceRoot":"..\\src","sourcesContent":["let ball = document.querySelector('.ball')\r\nconst action = document.querySelector('.action')\r\nconst layers = document.querySelectorAll('.layer')\r\nconst tapZone = document.querySelector('.tap-zone')\r\nconst wrapper = document.querySelector('.wrapper')\r\nconst gameView = document.querySelector('.game-view')\r\n\r\n// Labels\r\nconst playerNameLabel = document.querySelector('.player-name')\r\nconst gameOverLabel = document.getElementById('game-over-label')\r\nconst startLabel = document.getElementById('start-label')\r\nconst warningLabel = document.querySelector('.warning')\r\nconst scoreLabel = document.getElementById('score')\r\nconst highScoreLabel = document.getElementById('high-score')\r\n\r\n// Menu\r\nconst changeNameBtn = document.querySelector('.change-name-btn')\r\nconst leaderboardBtn = document.querySelector('.leaderboard-btn')\r\nconst settingsElement = document.querySelector('.settings')\r\nconst quialityBtn = document.querySelector('.quality-btn')\r\n\r\n// Modals\r\nconst nameModal = document.querySelector('.modal-name')\r\nconst leaderboardModal = document.querySelector('.modal-leaderboard')\r\nconst leaderboardContent = document.querySelector('.leaderboard-wrapper')\r\nconst leaderboardPopup = document.querySelector('.modal-leaderboard .popup')\r\nconst nameBtn = document.querySelector('.name-btn')\r\nconst warningText = document.querySelector('.warning-text')\r\nconst closeLeaderboardBtn = document.querySelector('.close-leaderboard')\r\n\r\nlet isInAir = false\r\nlet gravity = 0.91\r\nlet isGameOver = true\r\nlet isGameReady = false\r\nlet position = 0\r\nlet highScore = 0\r\nlet score = 0\r\nlet speedCoefficient = 1\r\nlet playerName\r\nlet clickOrTouch = 'click'\r\nlet qualitySettings = localStorage.getItem('bouncy-quality') || 'high'\r\n\r\nquialityBtn.textContent = `Quality: ${qualitySettings}`\r\n\r\nlet allTimeouts = []\r\nlet allIntervals = []\r\nlet backgroundTimeouts = []\r\n\r\nconst leaderboardAPI = 'https://bouncy-server.herokuapp.com/score'\r\n\r\n// check for touchscreen, adapt for mobile if found\r\nif ('ontouchstart' in document.documentElement) {\r\n    clickOrTouch = 'touchstart'\r\n    tapZone.style.display = 'flex'\r\n    startLabel.innerHTML = '<h2>Tap to start</h2>'\r\n    tapZone.addEventListener('touchstart', control)\r\n} else {\r\n    document.addEventListener('keydown', control)\r\n}\r\n\r\nfunction control(e) {\r\n    if (clickOrTouch === 'touchstart' || (clickOrTouch === 'click' && e.key === ' ')) {\r\n        e.preventDefault()\r\n        if (isGameOver && isGameReady) {\r\n            restart()\r\n        } else if (!isInAir && !isGameOver) {\r\n            isInAir = true\r\n            jump()\r\n        }\r\n    }\r\n}\r\n\r\nfunction restart() {\r\n    score = 0\r\n    scoreLabel.innerHTML = `Score: ${score}`\r\n    position = 0\r\n    isInAir = false\r\n    speedCoefficient = 1\r\n    isGameOver = false\r\n    isGameReady = false\r\n    gameOverLabel.style.display = 'none'\r\n    if (!ball) {\r\n        const newBall = document.createElement('div')\r\n        for (let i = 0; i < 4; i++) {\r\n            const quarter = document.createElement('div')\r\n            quarter.classList.add('quarter')\r\n            newBall.appendChild(quarter)\r\n        }\r\n        newBall.classList.add('ball')\r\n        action.appendChild(newBall)\r\n        ball = newBall\r\n    }\r\n    generateObstacles()\r\n    speedUp()\r\n    startLabel.style.display = 'none'\r\n    settingsElement.style.display = 'none'\r\n}\r\n\r\nfunction jump() {\r\n    let lastPosition = 100\r\n    let jumpUpLoopId = setInterval(() => {\r\n        if (ball) {\r\n            let positionDifference = Math.abs(lastPosition - position)\r\n            if (positionDifference < 1) {\r\n                clearInterval(jumpUpLoopId)\r\n                allIntervals = allIntervals.filter(id => id !== jumpUpLoopId)\r\n                let fallDownLoopId = setInterval(() => {\r\n                    if (ball) {\r\n                        position -= 10\r\n                        position /= gravity\r\n                        if (position <= 0) {\r\n                            position = 0\r\n                            clearInterval(fallDownLoopId)\r\n                            allIntervals = allIntervals.filter(id => id !== fallDownLoopId)\r\n                            isInAir = false\r\n                        }\r\n                        ball.style.bottom = position + 'px'\r\n                    }\r\n                }, 20)\r\n                allIntervals.push(fallDownLoopId)\r\n            }\r\n\r\n            lastPosition = position\r\n            position += 10\r\n            position *= gravity\r\n            ball.style.bottom = position + 'px'\r\n        }\r\n    }, 20)\r\n    allIntervals.push(jumpUpLoopId)\r\n}\r\n\r\nfunction speedUp() {\r\n    let randomTime = Math.random() * 5000 + 5000\r\n\r\n    let speedUpTimeoutId = setTimeout(() => {\r\n        if (!isGameOver) {\r\n            speedCoefficient = (Number(speedCoefficient) + 0.1).toFixed(1)\r\n            speedUp()\r\n            allTimeouts.filter(id => id !== speedUpTimeoutId)\r\n        }\r\n    }, randomTime)\r\n    allTimeouts.push(speedUpTimeoutId)\r\n}\r\n\r\nfunction generateObstacles() {\r\n    let randomTime = Math.random() * 3000 + 1000\r\n    let obstaclePosition = 1000\r\n\r\n    const obstacle = document.createElement('div')\r\n    obstacle.classList.add('obstacle')\r\n    obstacle.classList.add(qualitySettings)\r\n    action.appendChild(obstacle)\r\n    obstacle.style.left = obstaclePosition + 'px'\r\n\r\n    let hitCheckLoopId = setInterval(() => {\r\n        if (obstaclePosition > 0 && obstaclePosition < 60 && position < 60) {\r\n            gameOver()\r\n            clearInterval(hitCheckLoopId)\r\n        }\r\n        obstaclePosition -= 2 * speedCoefficient\r\n        obstacle.style.left = obstaclePosition + 'px'\r\n    }, 2)\r\n    allIntervals.push(hitCheckLoopId)\r\n\r\n    let passCheckLoopId = setInterval(() => {\r\n        if (obstaclePosition < -60) {\r\n            action.removeChild(obstacle)\r\n            score += 10 * speedCoefficient\r\n            scoreLabel.innerHTML = `Score: ${score}`\r\n            clearInterval(passCheckLoopId)\r\n            clearInterval(hitCheckLoopId)\r\n            allIntervals = allIntervals.filter(id => id !== passCheckLoopId)\r\n        }\r\n    }, 50)\r\n\r\n    allIntervals.push(passCheckLoopId)\r\n\r\n    let genTimeoutId = setTimeout(() => {\r\n        if (!isGameOver) {\r\n            generateObstacles()\r\n            allTimeouts.filter(id => id !== genTimeoutId)\r\n        }\r\n    }, randomTime)\r\n    allTimeouts.push(genTimeoutId)\r\n}\r\n\r\nasync function gameOver() {\r\n    allIntervals.forEach(id => {\r\n        clearInterval(id)\r\n    })\r\n    allIntervals = []\r\n\r\n    allTimeouts.forEach(id => {\r\n        clearTimeout(id)\r\n    })\r\n    allTimeouts = []\r\n\r\n    gameOverLabel.style.display = 'flex'\r\n    startLabel.style.display = 'block'\r\n    settingsElement.style.display = 'flex'\r\n    isGameOver = true\r\n    while (action.firstChild) {\r\n        action.removeChild(action.lastChild)\r\n    }\r\n    ball = null\r\n    if (score > highScore) {\r\n        isGameReady = false\r\n        leaderboardModal.style.display = 'flex'\r\n        leaderboardContent.innerHTML = '<p>Loading, please wait...</p>'\r\n\r\n        const newLeaderboard = await postHighScore()\r\n        showLeaderboard(newLeaderboard.leaderboard, newLeaderboard.personal)\r\n    } else {\r\n        isGameReady = true\r\n    }\r\n}\r\n\r\nasync function postHighScore() {\r\n    const response = await fetch(leaderboardAPI, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name: playerName, score: score }),\r\n    })\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n            showError(err)\r\n        })\r\n\r\n    highScore = response.personal.score\r\n    highScoreLabel.innerHTML = `High score: ${highScore}`\r\n\r\n    return response\r\n}\r\n\r\nfunction fetchLeaderboard() {\r\n    leaderboardContent.innerHTML = '<p>Loading, please wait...</p>'\r\n\r\n    fetch(leaderboardAPI)\r\n        .then(res => res.json())\r\n        .then(data => showLeaderboard(data))\r\n        .catch(err => {\r\n            showError(err)\r\n        })\r\n}\r\n\r\nfunction openLeaderboardModal(e) {\r\n    e.stopPropagation()\r\n    isGameReady = false\r\n    leaderboardModal.style.display = 'flex'\r\n    fetchLeaderboard()\r\n}\r\n\r\nfunction showLeaderboard(leaderboard, player) {\r\n    if (typeof leaderboard === 'object') {\r\n        leaderboardTable = generateTable(leaderboard)\r\n        leaderboardContent.innerHTML = ''\r\n        leaderboardContent.appendChild(leaderboardTable)\r\n\r\n        if (player) {\r\n            if (player.position < 11) {\r\n                const position = document.querySelector(`.modal-leaderboard tbody tr:nth-child(${player.position})`)\r\n                position.classList.add('player-in-leaderboard')\r\n            } else {\r\n                const tableBody = document.querySelector('.modal-leaderboard tbody')\r\n                const playerOutOfLeaderboard = document.createElement('tr')\r\n                const playerPosition = document.createElement('td')\r\n                playerPosition.innerText = player.position\r\n                const playerName = document.createElement('td')\r\n                playerName.innerText = player.name\r\n                const playerScore = document.createElement('td')\r\n                playerScore.innerText = player.score\r\n                playerOutOfLeaderboard.appendChild(playerPosition)\r\n                playerOutOfLeaderboard.appendChild(playerName)\r\n                playerOutOfLeaderboard.appendChild(playerScore)\r\n                tableBody.appendChild(playerOutOfLeaderboard)\r\n            }\r\n        }\r\n    } else if (typeof leaderboard === 'string') {\r\n        leaderboardContent.innerHTML = `<h2>${leaderboard}</h2>`\r\n    }\r\n}\r\n\r\nfunction closeLeaderboardModal(e) {\r\n    e.stopPropagation()\r\n    leaderboardModal.style.display = 'none'\r\n    isGameReady = true\r\n}\r\n\r\nfunction generateTable(leaderboard) {\r\n    const table = document.createElement('table')\r\n    const thead = document.createElement('thead')\r\n    table.appendChild(thead)\r\n    const tr = document.createElement('tr')\r\n    thead.appendChild(tr)\r\n    const thPosition = document.createElement('th')\r\n    thPosition.innerText = '#:'\r\n    const thName = document.createElement('th')\r\n    thName.innerText = 'Name:'\r\n    const thScore = document.createElement('th')\r\n    thScore.innerText = 'Score:'\r\n    tr.appendChild(thPosition)\r\n    tr.appendChild(thName)\r\n    tr.appendChild(thScore)\r\n    const tbody = document.createElement('tbody')\r\n    table.appendChild(tbody)\r\n    leaderboard.forEach((record, index) => {\r\n        const tr = document.createElement('tr')\r\n        const tdPosition = document.createElement('td')\r\n        tdPosition.innerText = index + 1\r\n        const tdName = document.createElement('td')\r\n        tdName.innerText = record.name\r\n        const tdScore = document.createElement('td')\r\n        tdScore.innerText = record.score\r\n        tr.appendChild(tdPosition)\r\n        tr.appendChild(tdName)\r\n        tr.appendChild(tdScore)\r\n        tbody.appendChild(tr)\r\n    })\r\n    return table\r\n}\r\n\r\nfunction getPersonalHighScore(name) {\r\n    fetch(`${leaderboardAPI}/${name}/`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.score) {\r\n                highScore = data.score\r\n                highScoreLabel.innerHTML = `High score: ${highScore}`\r\n            } else {\r\n                highScore = 0\r\n                highScoreLabel.innerHTML = `High score: none`\r\n            }\r\n        })\r\n        .catch(err => {\r\n            showError(err)\r\n        })\r\n}\r\n\r\nfunction generateBackground() {\r\n    layers.forEach((layer, index, array) => {\r\n        generateBackgroundLayer(layer, index, array.length)\r\n    })\r\n}\r\n\r\nfunction generateBackgroundLayer(layer, index, arrayLength) {\r\n    const randomTime = (Math.random() * 2 + 2 / speedCoefficient) * 1000\r\n    if (qualitySettings !== 'low') {\r\n        const indexFixed = index + 1\r\n        const timeToPassLayer = 30 / indexFixed / speedCoefficient\r\n        let backgroundElementPosition = 1050\r\n        const randomShadeOfGray = Math.round(Math.random() * 10 + 60) + 20 * indexFixed\r\n\r\n        const backgroundElement = document.createElement('div')\r\n        backgroundElement.classList.add('background-element')\r\n        backgroundElement.classList.add(qualitySettings)\r\n        layer.appendChild(backgroundElement)\r\n        backgroundElement.style.left = backgroundElementPosition + 'px'\r\n        backgroundElement.style.height = Math.round(Math.random() * 60 + 60) * indexFixed + 'px'\r\n        backgroundElement.style.width = Math.round(Math.random() * 50 + 50) * indexFixed + 'px'\r\n        backgroundElement.style.backgroundColor = `rgb(${randomShadeOfGray}, ${randomShadeOfGray}, ${randomShadeOfGray + 40})`\r\n        backgroundElement.style.zIndex = indexFixed\r\n        backgroundElement.style.padding = 10 * indexFixed + 'px'\r\n\r\n        const numberOfRows = Math.round((parseInt(backgroundElement.style.height) - 25) / (30 * indexFixed))\r\n\r\n        if (qualitySettings === 'high') {\r\n            // create rows of windows\r\n            for (let i = 0; i < numberOfRows; i++) {\r\n                const row = document.createElement('div')\r\n                row.classList.add('row')\r\n                backgroundElement.appendChild(row)\r\n\r\n                const columns = parseInt(backgroundElement.style.width) > 20 * indexFixed * 3 ? 3 : 2\r\n\r\n                // create columns of windows\r\n                for (let i = 0; i < columns; i++) {\r\n                    const window = document.createElement('div')\r\n                    window.classList.add('window')\r\n                    window.style.height = 10 * indexFixed + 'px'\r\n                    window.style.width = 10 * indexFixed + 'px'\r\n                    row.appendChild(window)\r\n                }\r\n            }\r\n        }\r\n\r\n        backgroundElement.style.animationDuration = timeToPassLayer + 's'\r\n\r\n        let backgroundTimoutId = setTimeout(() => {\r\n            layer.removeChild(backgroundElement)\r\n            backgroundTimeouts.filter(id => id !== backgroundTimoutId)\r\n        }, timeToPassLayer * 1000)\r\n        backgroundTimeouts.push(backgroundTimoutId)\r\n    }\r\n\r\n    setTimeout(() => {\r\n        generateBackgroundLayer(layer, index, arrayLength)\r\n    }, randomTime)\r\n}\r\n\r\nfunction setPlayerName(e) {\r\n    e.preventDefault()\r\n    const newName = document.getElementById('name').value.trim()\r\n    const nameRegExp = new RegExp(/^[a-z0-9]+$/i)\r\n\r\n    let isValidName = nameRegExp.test(newName)\r\n    let isNameLengthOk = newName.length > 2 && newName.length < 14\r\n\r\n    if (isValidName && isNameLengthOk) {\r\n        playerName = newName\r\n        nameModal.style.display = 'none'\r\n        isGameReady = true\r\n        startLabel.style.display = 'block'\r\n        settingsElement.style.display = 'flex'\r\n\r\n        playerNameLabel.innerHTML = playerName\r\n        getPersonalHighScore(playerName)\r\n    } else if (!isValidName) {\r\n        warningLabel.removeAttribute('hidden')\r\n        warningText.innerHTML = 'Only letters and numbers are allowed.'\r\n    } else {\r\n        warningLabel.removeAttribute('hidden')\r\n        warningText.innerHTML = 'Minimum 3, maximum 13 characters'\r\n    }\r\n    return false\r\n}\r\n\r\nfunction changeNameModal(e) {\r\n    nameModal.style.display = 'flex'\r\n    isGameReady = false\r\n    startLabel.style.display = 'none'\r\n    settingsElement.style.display = 'none'\r\n}\r\n\r\nfunction showError(message) {\r\n    const errorPopup = document.createElement('div')\r\n    const gameWrapper = document.querySelector('.wrapper')\r\n    errorPopup.innerHTML = `<p>Something went wrong: ${message}</p>`\r\n    errorPopup.classList.add('error-popup')\r\n    gameWrapper.appendChild(errorPopup)\r\n\r\n    setTimeout(() => {\r\n        gameWrapper.removeChild(errorPopup)\r\n    }, 5000)\r\n}\r\n\r\nfunction changeQuality(e) {\r\n    e.stopPropagation()\r\n    if (qualitySettings === 'low') {\r\n        qualitySettings = 'high'\r\n        document.querySelectorAll('.background-element').forEach(b => b.classList.replace('low', 'high'))\r\n    } else if (qualitySettings === 'mid') {\r\n        qualitySettings = 'low'\r\n        document.querySelectorAll('.background-element').forEach(b => b.remove())\r\n        backgroundTimeouts.forEach(id => {\r\n            clearTimeout(id)\r\n        })\r\n        backgroundTimeouts = []\r\n    } else if (qualitySettings === 'high') {\r\n        qualitySettings = 'mid'\r\n        document.querySelectorAll('.window').forEach(w => w.remove())\r\n        document.querySelectorAll('.background-element').forEach(b => b.classList.replace('high', 'mid'))\r\n    }\r\n    localStorage.setItem('bouncy-quality', qualitySettings)\r\n    quialityBtn.textContent = `Quality: ${qualitySettings}`\r\n}\r\n\r\nnameBtn.addEventListener(clickOrTouch, setPlayerName)\r\nchangeNameBtn.addEventListener(clickOrTouch, changeNameModal)\r\nleaderboardBtn.addEventListener(clickOrTouch, openLeaderboardModal)\r\ncloseLeaderboardBtn.addEventListener(clickOrTouch, closeLeaderboardModal)\r\nquialityBtn.addEventListener(clickOrTouch, changeQuality)\r\n\r\n// Fix for mobile\r\n\r\nwindow.onresize = scaleGame\r\n\r\nfunction scaleGame() {\r\n    if (screen.width < 1000) {\r\n        const windowWidth = screen.width\r\n        wrapper.classList.add('fullscreen')\r\n        const scaleAmount = windowWidth / 1100\r\n        gameView.style.transform = `scale(${scaleAmount > 1 ? 1 : scaleAmount})`\r\n        tapZone.style.transform = `scale(${scaleAmount > 1 ? 1 : scaleAmount}) translateY(-50%)`\r\n    } else {\r\n        wrapper.classList.remove('fullscreen')\r\n        gameView.style.transform = ''\r\n        tapZone.style.transform = 'translateY(-50%)'\r\n    }\r\n}\r\n\r\nscaleGame()\r\n\r\ngenerateBackground()\r\n"]}